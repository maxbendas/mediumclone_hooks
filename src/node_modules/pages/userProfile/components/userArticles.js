import React, {Fragment, useEffect} from 'react';
import {getPaginator, limit} from "utils";
import {stringify} from "query-string";
import useFetch from "hooks/useFetch";
import Loading from "components/loading";
import ErrorMessage from "components/errorMessage";
import Feed from "components/feed";
import Pagination from "components/pagination";

const getApiUrl = ({username, offset, isFavorites}) => {
    const params = isFavorites ?
        {limit, offset, favorited: username} : {limit, offset, author: username}
        return `/articles?${stringify(params)}`
}

const UserArticles = ({username, location, isFavorites, match}) => {

    const {offset, currentPage} = getPaginator(location.search)
    const apiUrl = getApiUrl({username, offset, isFavorites})
    const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)

    useEffect(()=>{
        doFetch()
    }, [doFetch, isFavorites, currentPage])

    const url = match.url

    return (
        <div>
            {isLoading && <Loading/>}
            {error && <ErrorMessage/>}
            {!isLoading && response && (
                <Fragment>
                    <Feed articles={response.articles}/>
                    <Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage}/>
                </Fragment>)}
        </div>
    );
};

export default UserArticles;